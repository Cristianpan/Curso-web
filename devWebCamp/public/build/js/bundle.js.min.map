{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["busqueda","categoria","dia","document","querySelector","dias","querySelectorAll","addEventListener","terminoBusqueda","forEach","e","target","name","value","async","url","response","fetch","eventos","horasTomadas","map","evento","horaId","removerSelected","hora","includes","parseInt","dataset","classList","contains","add","remove","seleccionarHora","obtenerHorasDisponibles","json","body","buscarEventos","inputHiddenHora","horaSeleccionada","ponentes","ponentesFiltrados","ponentesInput","trim","length","expresion","RegExp","filter","ponente","nombre","toLowerCase","search","listadoPonentes","firstChild","removeChild","removePonentes","fragmen","createDocumentFragment","ponenteHtml","createElement","textContent","ponenteId","id","appendChild","noResultados","mostrarPonentes","arrayPonentes","apellido","obtenerPonentes","window","tagsInput","tagsInputHidden","saveTag","tags","split","tagsDiv","tag","tagLi","createTagLi","showTags","readTags","data","preventDefault","newTag","updateInputHidden","addTag","removeTag","console","log","toString","ondblclick"],"mappings":"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","file":"bundle.js","sourcesContent":["(()=> {    \r\n    const busqueda = {\r\n        categoria: '',\r\n        dia: '',\r\n    }\r\n    \r\n    const horas = document.querySelector('#horas');\r\n    \r\n    if (horas){\r\n        const dias   = document.querySelectorAll('[name=\"dia\"]');\r\n        const categoria = document.querySelector('#categoria');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n    }\r\n       \r\n    function terminoBusqueda(e){\r\n        busqueda[e.target.name] = e.target.value;\r\n\r\n        if (busqueda.categoria && busqueda.dia){\r\n            buscarEventos();\r\n        }\r\n    }\r\n\r\n    async function buscarEventos(){\r\n        const {categoria, dia} = busqueda;\r\n        const url = `/api/eventosHorario?categoria=${categoria}&dia=${dia}`; \r\n        const response = await fetch(url)\r\n\r\n        const result = await response.json(); \r\n\r\n        obtenerHorasDisponibles(result.body);\r\n    }\r\n\r\n    function obtenerHorasDisponibles(eventos){\r\n        const horasTomadas = eventos.map(evento => evento.horaId);\r\n        document.querySelector(\"[name='hora']\").value = \"\";\r\n        removerSelected();\r\n        const horasDisponibles = document.querySelectorAll('#horas li');\r\n        horasDisponibles.forEach(hora => {\r\n            if (!horasTomadas.includes(parseInt(hora.dataset.horaId))){\r\n                hora.classList.remove('horas__hora--disabled')\r\n                hora.addEventListener('click', seleccionarHora); \r\n            } else {\r\n                hora.classList.contains('horas__hora--disabled') ? '' : hora.classList.add('horas__hora--disabled');\r\n            }\r\n        });\r\n    }\r\n\r\n    function seleccionarHora(e){\r\n        const inputHiddenHora = document.querySelector(\"[name='hora']\");\r\n        removerSelected();\r\n        inputHiddenHora.value = e.target.dataset.horaId;\r\n        e.target.classList.add('horas__hora--selected');\r\n    }\r\n    \r\n    function removerSelected(){\r\n        const horaSeleccionada = document.querySelector('.horas__hora--selected'); \r\n        if (horaSeleccionada){\r\n            horaSeleccionada.classList.remove('horas__hora--selected');\r\n        }\r\n        \r\n    }\r\n\r\n\r\n})();","(()=> {\r\n    let ponentes = [];\r\n    let ponentesFiltrados = [];\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if (ponentesInput){\r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n        obtenerPonentes();\r\n    }\r\n\r\n\r\n    async function obtenerPonentes(){\r\n        const url = '/api/ponentes'; \r\n        const response = await fetch(url); \r\n        const result = await response.json();  \r\n        formatearPonentes(result.body); \r\n    }\r\n\r\n\r\n    function formatearPonentes(arrayPonentes){\r\n        ponentes = arrayPonentes.map(ponente => {\r\n            return {\r\n                id: ponente.id,\r\n                nombre: `${ponente.nombre} ${ponente.apellido}`.trim()\r\n            }\r\n        })\r\n    }\r\n\r\n    function buscarPonentes(e){\r\n        const busqueda = e.target.value.trim(); \r\n\r\n        if (busqueda.length > 4){\r\n            const expresion = new RegExp(busqueda, \"i\");\r\n            ponentesFiltrados = ponentes.filter(ponente => !ponente.nombre.toLowerCase().search(expresion));\r\n        } else {\r\n            ponentesFiltrados = []; \r\n        }\r\n\r\n        mostrarPonentes(); \r\n    }\r\n\r\n    function mostrarPonentes(){\r\n        const listadoPonentes = document.querySelector(\"#listado-ponentes\");\r\n        \r\n        removePonentes();\r\n        \r\n        \r\n        if (ponentesFiltrados.length > 0) {\r\n            const fragmen = document.createDocumentFragment();\r\n            ponentesFiltrados.forEach(ponente => {\r\n                const ponenteHtml = document.createElement('LI'); \r\n                ponenteHtml.classList.add('listado-ponentes__ponente');\r\n                ponenteHtml.textContent = ponente.nombre; \r\n                ponenteHtml.dataset.ponenteId = ponente.id;\r\n                fragmen.appendChild(ponenteHtml);\r\n            })\r\n            listadoPonentes.appendChild(fragmen);\r\n        } else {\r\n            const noResultados = document.createElement('LI'); \r\n            noResultados.classList.add('listado-ponentes__no-resultado');\r\n            noResultados.textContent.textContent = 'No hay resultados para tu busqueda'\r\n            listadoPonentes.appendChild(noResultados);\r\n        }\r\n    }\r\n\r\n    function removePonentes(){\r\n        const listadoPonentes = document.querySelector(\"#listado-ponentes\");\r\n\r\n        while(listadoPonentes.firstChild){\r\n            listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n        }\r\n\r\n    }\r\n    \r\n\r\n})();","(()=> {\r\n    window.addEventListener('DOMContentLoaded', iniciarApp); \r\n    let tags = [];\r\n\r\n    function iniciarApp(){\r\n        readTags(); \r\n    }\r\n\r\n    function readTags(){\r\n        const tagsInput = document.querySelector('#tags_input')\r\n        const tagsInputHidden = document.querySelector('[name=tags]');\r\n        if (tagsInput){\r\n            tagsInput.addEventListener('beforeinput',saveTag); \r\n\r\n            if (tagsInputHidden.value){\r\n                tags = tagsInputHidden.value.split(',');\r\n                showTags();\r\n            }\r\n        }  \r\n\r\n    }\r\n\r\n    function saveTag(e){\r\n        if (e.data === ','){\r\n            //Se evita que la coma se ingresada en el input\r\n            e.preventDefault();\r\n            const value = e.target.value.trim();\r\n\r\n            if (value){\r\n                tags = [...tags, value];\r\n                e.target.value = '';\r\n                addTag(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    function addTag(newTag){\r\n        const tagsDiv = document.querySelector(\"#tags\"); \r\n        const tag = createTagLi(newTag);\r\n        tagsDiv.appendChild(tag);\r\n        updateInputHidden();\r\n    }\r\n\r\n    function showTags(){\r\n        const tagsDiv = document.querySelector(\"#tags\"); \r\n        tags.forEach((tag)=> {\r\n            const tagLi = createTagLi(tag);\r\n            tagsDiv.appendChild(tagLi);\r\n        });\r\n    }\r\n\r\n    function removeTag(e){\r\n        console.log(e);\r\n        tags = tags.filter(tag => tag != e.target.textContent);\r\n        e.target.remove(); \r\n        updateInputHidden();\r\n    }\r\n\r\n    function updateInputHidden(){\r\n        const inputHidden = document.querySelector('[name=tags]'); \r\n        inputHidden.value = tags.toString();\r\n    }\r\n\r\n    function createTagLi(tag){\r\n        const tagLi = document.createElement('LI');\r\n        tagLi.classList.add('form__tag');\r\n        tagLi.textContent = tag;\r\n        tagLi.ondblclick = removeTag;\r\n        return tagLi;\r\n    }\r\n\r\n})();"]}