{"version":3,"sources":["tags.js"],"names":["window","addEventListener","tagsInput","document","querySelector","tagsInputHidden","saveTag","value","tags","split","tagsDiv","forEach","tag","tagLi","createTagLi","appendChild","showTags","readTags","e","data","preventDefault","target","trim","newTag","updateInputHidden","addTag","removeTag","console","log","filter","textContent","remove","toString","createElement","classList","add","ondblclick"],"mappings":"AAAA,MACAA,OAAAC,iBAAA,oBAGA,YAIA,WACA,MAAAC,EAAAC,SAAAC,cAAA,eACAC,EAAAF,SAAAC,cAAA,eACAF,IACAA,EAAAD,iBAAA,cAAAK,GAEAD,EAAAE,QACAC,EAAAH,EAAAE,MAAAE,MAAA,KA4BA,WACA,MAAAC,EAAAP,SAAAC,cAAA,SACAI,EAAAG,QAAAC,IACA,MAAAC,EAAAC,EAAAF,GACAF,EAAAK,YAAAF,KA/BAG,KAXAC,MAHA,IAAAT,EAAA,GAoBA,SAAAF,EAAAY,GACA,GAAA,MAAAA,EAAAC,KAAA,CAEAD,EAAAE,iBACA,MAAAb,EAAAW,EAAAG,OAAAd,MAAAe,OAEAf,IACAC,EAAA,IAAAA,EAAAD,GACAW,EAAAG,OAAAd,MAAA,GAMA,SAAAgB,GACA,MAAAb,EAAAP,SAAAC,cAAA,SACAQ,EAAAE,EAAAS,GACAb,EAAAK,YAAAH,GACAY,IATAC,CAAAlB,KAoBA,SAAAmB,EAAAR,GACAS,QAAAC,IAAAV,GACAV,EAAAA,EAAAqB,OAAAjB,GAAAA,GAAAM,EAAAG,OAAAS,aACAZ,EAAAG,OAAAU,SACAP,IAGA,SAAAA,IACArB,SAAAC,cAAA,eACAG,MAAAC,EAAAwB,WAGA,SAAAlB,EAAAF,GACA,MAAAC,EAAAV,SAAA8B,cAAA,MAIA,OAHApB,EAAAqB,UAAAC,IAAA,aACAtB,EAAAiB,YAAAlB,EACAC,EAAAuB,WAAAV,EACAb,IApEA","file":"bundle.js","sourcesContent":["(()=> {\r\n    window.addEventListener('DOMContentLoaded', iniciarApp); \r\n    let tags = [];\r\n\r\n    function iniciarApp(){\r\n        readTags(); \r\n    }\r\n\r\n    function readTags(){\r\n        const tagsInput = document.querySelector('#tags_input')\r\n        const tagsInputHidden = document.querySelector('[name=tags]');\r\n        if (tagsInput){\r\n            tagsInput.addEventListener('beforeinput',saveTag); \r\n\r\n            if (tagsInputHidden.value){\r\n                tags = tagsInputHidden.value.split(',');\r\n                showTags();\r\n            }\r\n        }  \r\n\r\n    }\r\n\r\n    function saveTag(e){\r\n        if (e.data === ','){\r\n            //Se evita que la coma se ingresada en el input\r\n            e.preventDefault();\r\n            const value = e.target.value.trim();\r\n\r\n            if (value){\r\n                tags = [...tags, value];\r\n                e.target.value = '';\r\n                addTag(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    function addTag(newTag){\r\n        const tagsDiv = document.querySelector(\"#tags\"); \r\n        const tag = createTagLi(newTag);\r\n        tagsDiv.appendChild(tag);\r\n        updateInputHidden();\r\n    }\r\n\r\n    function showTags(){\r\n        const tagsDiv = document.querySelector(\"#tags\"); \r\n        tags.forEach((tag)=> {\r\n            const tagLi = createTagLi(tag);\r\n            tagsDiv.appendChild(tagLi);\r\n        });\r\n    }\r\n\r\n    function removeTag(e){\r\n        console.log(e);\r\n        tags = tags.filter(tag => tag != e.target.textContent);\r\n        e.target.remove(); \r\n        updateInputHidden();\r\n    }\r\n\r\n    function updateInputHidden(){\r\n        const inputHidden = document.querySelector('[name=tags]'); \r\n        inputHidden.value = tags.toString();\r\n    }\r\n\r\n    function createTagLi(tag){\r\n        const tagLi = document.createElement('LI');\r\n        tagLi.classList.add('form__tag');\r\n        tagLi.textContent = tag;\r\n        tagLi.ondblclick = removeTag;\r\n        return tagLi;\r\n    }\r\n\r\n})();"]}