(()=>{document.querySelector("#add-task").addEventListener("click",(function(){const o=document.createElement("DIV");o.classList.add("modal"),o.innerHTML='\n            <form class="form new-task">\n                <legend>Añade una nueva tarea</legend>\n                <div class="field">\n                    <label for="task">Tarea</label>\n                    <input type="text" name="task" placeholder="Agrega una tarea al proyecto" id="task"/>\n                </div>\n                <div class="field">\n                    <label for="description">Descripcion</label>\n                    <textarea id="description" name="description" placeholder="Descripción de la tarea"></textarea>\n                </div>\n\n                <div class="options aling-right">\n                    <button type="button" class="close-modal">Cancelar</button>\n                    <input type="submit" class="submit-new-task" value="Agregar Tarea"/>\n                </div>\n            </form>\n        ',setTimeout(()=>{document.querySelector(".form").classList.add("animar")},0),o.addEventListener("click",s=>{s.preventDefault();const c=s.target.classList;if(c.contains("close-modal")){document.querySelector(".form").classList.add("close"),setTimeout(()=>{o.remove()},200)}else c.contains("submit-new-task")&&function(){const o=document.querySelector("#task").value.trim(),s=document.querySelector("#description").value.trim();o?(function(e=".error"){const t=document.querySelector(e);t&&t.remove()}(),async function(o){const{nombre:s,descripcion:c}=o,d={nombre:s,descripcion:c,proyectoId:n()};try{const n=await fetch("/api/crearTarea",{method:"POST",body:JSON.stringify(d),headers:{"Content-Type":"application/json"}}),o=await n.json();o.ok?(t(o.message,"legend","exito"),e=[...e,o.body],setTimeout(()=>{document.querySelector(".modal").remove(),function(e){const t=document.querySelector("#task-list"),n=a(e);t.appendChild(n)}(o.body)},1e3)):t(o.message,"legend")}catch(e){console.log(e)}}({nombre:o,descripcion:s})):t("El nombre de la tarea es obligatorio","legend")}()}),document.querySelector(".dashboard").appendChild(o)}));let e=[];function t(e,t,n="error"){if(!document.querySelector(".error")){const a=document.querySelector(t),o=document.createElement("DIV");o.classList.add(n),o.classList.add("alert");const s=document.createElement("P");s.textContent=e,o.appendChild(s),a.after(o)}}function n(){return new URLSearchParams(window.location.search).get("token")}function a(e){const t={0:"Pendiente",1:"Completa"},n=document.createElement("LI");n.classList.add("task"),n.classList.add("taskId-"+e.id);const a=document.createElement("P");a.innerHTML="&#10148; "+e.nombre;const o=document.createElement("P");o.textContent=e.descripcion;const s=document.createElement("DIV");s.classList.add("options");const c=document.createElement("BUTTON");c.classList.add("state-task"),c.classList.add(""+t[e.estado].toLowerCase()),c.textContent=t[e.estado],c.dataset.stateTask=e.estado;const d=document.createElement("BUTTON");d.classList.add("delete-task"),d.textContent="Eliminar",s.appendChild(c),s.appendChild(d);const r=document.createElement("SUMMARY");r.appendChild(a),r.appendChild(s);const i=document.createElement("DETAILS");return i.classList.add("details-task"),i.appendChild(r),i.appendChild(o),n.appendChild(i),n}!async function(){const t="/api/tareas?id="+n();try{const n=await fetch(t),o=await n.json();e=o.body,function(e){const t=document.querySelector("#task-list");if(0===e.length){const e=document.createElement("LI");e.innerHTML="<p>No Hay Tareas</p>",e.classList.add("no-tasks"),t.appendChild(e)}else{const n=document.createDocumentFragment();e.forEach(e=>{const t=a(e);n.appendChild(t)}),t.appendChild(n)}}(e)}catch(e){console.log(e)}}()})();